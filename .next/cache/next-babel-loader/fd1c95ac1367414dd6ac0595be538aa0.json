{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/sensor-dashboard/components/DataTableRow.js\";\nimport { useQuery, gql } from '@apollo/client';\nconst getData = gql`\n  query allData{\n    allData{\n      time\n      temperature\n      humidity\n      heatIndex\n      dewPoint\n      absoluteHumidity\n    }\n  }\n`;\n\nfunction DataTableRow() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getData);\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading...\"\n  }, void 0, false);\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Error :(\"\n  }, void 0, false);\n  return data.allData.map(({\n    time,\n    temperature,\n    humidity,\n    heatIndex,\n    dewPoint,\n    absoluteHumidity\n  }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: temperature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: humidity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: heatIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: dewPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: absoluteHumidity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, time, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this));\n}\n\nexport default DataTableRow;","map":{"version":3,"sources":["/home/pi/sensor-dashboard/components/DataTableRow.js"],"names":["useQuery","gql","getData","DataTableRow","loading","error","data","allData","map","time","temperature","humidity","heatIndex","dewPoint","absoluteHumidity"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,MAAMC,OAAO,GAAGD,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAcA,SAASE,YAAT,GAAwB;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,OAAD,CAAzC;AAEE,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA,mBAAP;AACT,SAAOC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,QAA1C;AAAoDC,IAAAA;AAApD,GAAD,kBACpB;AAAA,4BACE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,KAASL,IAAT;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAUH;;AACD,eAAeN,YAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nconst getData = gql`\n  query allData{\n    allData{\n      time\n      temperature\n      humidity\n      heatIndex\n      dewPoint\n      absoluteHumidity\n    }\n  }\n`;\n\n\nfunction DataTableRow() {\nconst { loading, error, data } = useQuery(getData);\n\n  if (loading) return <>Loading...</>;\n  if (error) return <>Error :(</>;\n    return data.allData.map(({ time, temperature, humidity, heatIndex, dewPoint, absoluteHumidity}) => (\n        <tr key={time}>\n          <td>{time}</td>\n          <td>{temperature}</td>\n          <td>{humidity}</td>\n          <td>{heatIndex}</td>\n          <td>{dewPoint}</td>\n          <td>{absoluteHumidity}</td>\n        </tr>\n    ));\n}\nexport default DataTableRow;\n"]},"metadata":{},"sourceType":"module"}