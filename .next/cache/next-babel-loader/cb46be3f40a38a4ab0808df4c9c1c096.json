{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/sensor-dashboard/components/Graph.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query allData{\\n    allData{\\n      time\\n      temperature\\n      humidity\\n      heatIndex\\n      dewPoint\\n      absoluteHumidity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, gql } from '@apollo/client';\nimport { Line } from 'react-chartjs-2';\nvar getData = gql(_templateObject());\n\nfunction Graph() {\n  _s();\n\n  var graphData = [];\n\n  var _useQuery = useQuery(getData),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    console.log(data.allData);\n\n    for (var i = 0; i < data.allData.length; i++) {\n      graphData.push({\n        time: data.allData[i].time,\n        temperature: data.allData[i].temperature,\n        humidity: data.allData[i].humidity\n      });\n    }\n  }\n\n  var state = {\n    labels: graphData.map(function (datapoint) {\n      return datapoint.time;\n    }),\n    datasets: [{\n      label: 'Temperature',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: graphData.map(function (datapoint) {\n        return datapoint.temperature;\n      })\n    }]\n  };\n  var humidity = {\n    labels: graphData.map(function (datapoint) {\n      return datapoint.time;\n    }),\n    datasets: [{\n      label: 'Humidity',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: graphData.map(function (datapoint) {\n        return datapoint.humidity;\n      })\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: 'Temperature over time',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: humidity,\n      options: {\n        title: {\n          display: true,\n          text: 'Humidity over time',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Graph, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/pi/sensor-dashboard/components/Graph.js"],"names":["useQuery","gql","Line","getData","Graph","graphData","loading","error","data","console","log","allData","i","length","push","time","temperature","humidity","state","labels","map","datapoint","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","maxWidth","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport {Line} from 'react-chartjs-2';\nconst getData = gql`\n  query allData{\n    allData{\n      time\n      temperature\n      humidity\n      heatIndex\n      dewPoint\n      absoluteHumidity\n    }\n  }\n`;\n\nfunction Graph(){\n    var graphData = []\n    const { loading, error, data } = useQuery(getData);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    if (data){\n        console.log(data.allData)\n        for (var i = 0; i < data.allData.length; i++){\n            graphData.push({\n            time: data.allData[i].time,\n            temperature: data.allData[i].temperature,\n            humidity: data.allData[i].humidity\n            })\n        }\n    }\n       const state = {\n  labels: graphData.map(datapoint =>(datapoint.time)),\n  datasets: [\n    {\n      label: 'Temperature',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: graphData.map(datapoint =>(datapoint.temperature))\n    }\n  ]\n}\n\n       const humidity = {\n  labels: graphData.map(datapoint =>(datapoint.time)),\n  datasets: [\n    {\n      label: 'Humidity',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: graphData.map(datapoint =>(datapoint.humidity))\n    }\n  ]\n}\n\n        return(\n            <div style={{maxWidth: \"90%\"}}>\n          <Line\n          data={state}\n          options={{\n            title:{\n              display:true,\n              text:'Temperature over time',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'bottom'\n            }\n          }}\n        />\n\n          <Line\n          data={humidity}\n          options={{\n            title:{\n              display:true,\n              text:'Humidity over time',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'bottom'\n            }\n          }}\n        />\n            </div>\n        )\n\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}