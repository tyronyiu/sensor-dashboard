{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/sensor-dashboard/components/CurrentStats.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query latestDatapoint{\\n    latestDatapoint{\\n      time\\n      temperature\\n      humidity\\n      heatIndex\\n      dewPoint\\n      absoluteHumidity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, gql } from '@apollo/client';\nimport styles from '../styles/Home.module.css';\nvar getData = gql(_templateObject());\n\nfunction CurrentStats() {\n  _s();\n\n  var _useQuery = useQuery(getData),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading...\"\n  }, void 0, false);\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Error :(\"\n  }, void 0, false);\n  if (data) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Temperature: \", data.latestDatapoint.temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Humidity: \", data.latestDatapoint.humidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CurrentStats, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = CurrentStats;\nexport default CurrentStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentStats\");","map":{"version":3,"sources":["/home/pi/sensor-dashboard/components/CurrentStats.js"],"names":["useQuery","gql","styles","getData","CurrentStats","loading","error","data","latestDatapoint","temperature","humidity"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,IAAMC,OAAO,GAAGF,GAAH,mBAAb;;AAcA,SAASG,YAAT,GAAuB;AAAA;;AAAA,kBACcJ,QAAQ,CAACG,OAAD,CADtB;AAAA,MACXE,OADW,aACXA,OADW;AAAA,MACFC,KADE,aACFA,KADE;AAAA,MACKC,IADL,aACKA,IADL;;AAEnB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA,mBAAP;AACX,MAAIC,IAAJ,EAAU,oBACN;AAAA,4BACA;AAAA,0CAA0BA,IAAI,CAACC,eAAL,CAAqBC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,uCAAuBF,IAAI,CAACC,eAAL,CAAqBE,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADM;AAOb;;GAXQN,Y;UAC4BJ,Q;;;KAD5BI,Y;AAYT,eAAeA,YAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport styles from '../styles/Home.module.css'\nconst getData = gql`\n  query latestDatapoint{\n    latestDatapoint{\n      time\n      temperature\n      humidity\n      heatIndex\n      dewPoint\n      absoluteHumidity\n    }\n  }\n`;\n\n\nfunction CurrentStats(){\n    const { loading, error, data } = useQuery(getData);\n    if (loading) return <>Loading...</>;\n    if (error) return <>Error :(</>;\n    if (data) return(\n        <>\n        <h2>Current Temperature: {data.latestDatapoint.temperature}</h2>\n        <h2>Current Humidity: {data.latestDatapoint.humidity}</h2>\n        </>\n    )\n\n}\nexport default CurrentStats;\n"]},"metadata":{},"sourceType":"module"}